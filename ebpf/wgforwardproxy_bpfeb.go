// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package ebpf

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"
	"structs"

	"github.com/cilium/ebpf"
)

type WgForwardProxyConnectionKey struct {
	_          structs.HostLayout
	ClientIp   uint32
	ClientPort uint32
	ServerIp   uint32
	ServerPort uint32
}

type WgForwardProxyConnectionValue struct {
	_         structs.HostLayout
	Timestamp uint64
	NatPort   uint16
	_         [6]byte
}

type WgForwardProxyMetricsKey struct {
	_      structs.HostLayout
	Dir    uint8
	Reason uint8
	Pad    uint16
}

type WgForwardProxyMetricsValue struct {
	_       structs.HostLayout
	Packets uint64
	Bytes   uint64
}

type WgForwardProxyNatKey struct {
	_        structs.HostLayout
	ServerIp uint32
	NatPort  uint32
}

type WgForwardProxyObfuscationConfig struct {
	_              structs.HostLayout
	Enabled        bool
	Method         uint8
	Key            [32]uint8
	KeyLen         uint8
	_              [1]byte
	TargetServerIp uint32
}

// LoadWgForwardProxy returns the embedded CollectionSpec for WgForwardProxy.
func LoadWgForwardProxy() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_WgForwardProxyBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load WgForwardProxy: %w", err)
	}

	return spec, err
}

// LoadWgForwardProxyObjects loads WgForwardProxy and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*WgForwardProxyObjects
//	*WgForwardProxyPrograms
//	*WgForwardProxyMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadWgForwardProxyObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadWgForwardProxy()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// WgForwardProxySpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type WgForwardProxySpecs struct {
	WgForwardProxyProgramSpecs
	WgForwardProxyMapSpecs
	WgForwardProxyVariableSpecs
}

// WgForwardProxyProgramSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type WgForwardProxyProgramSpecs struct {
	WgForwardProxy *ebpf.ProgramSpec `ebpf:"wg_forward_proxy"`
}

// WgForwardProxyMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type WgForwardProxyMapSpecs struct {
	ConnectionMap        *ebpf.MapSpec `ebpf:"connection_map"`
	MetricsMap           *ebpf.MapSpec `ebpf:"metrics_map"`
	NatPortCounter       *ebpf.MapSpec `ebpf:"nat_port_counter"`
	NatReverseMap        *ebpf.MapSpec `ebpf:"nat_reverse_map"`
	ObfuscationConfigMap *ebpf.MapSpec `ebpf:"obfuscation_config_map"`
	StatsMap             *ebpf.MapSpec `ebpf:"stats_map"`
}

// WgForwardProxyVariableSpecs contains global variables before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type WgForwardProxyVariableSpecs struct {
}

// WgForwardProxyObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadWgForwardProxyObjects or ebpf.CollectionSpec.LoadAndAssign.
type WgForwardProxyObjects struct {
	WgForwardProxyPrograms
	WgForwardProxyMaps
	WgForwardProxyVariables
}

func (o *WgForwardProxyObjects) Close() error {
	return _WgForwardProxyClose(
		&o.WgForwardProxyPrograms,
		&o.WgForwardProxyMaps,
	)
}

// WgForwardProxyMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadWgForwardProxyObjects or ebpf.CollectionSpec.LoadAndAssign.
type WgForwardProxyMaps struct {
	ConnectionMap        *ebpf.Map `ebpf:"connection_map"`
	MetricsMap           *ebpf.Map `ebpf:"metrics_map"`
	NatPortCounter       *ebpf.Map `ebpf:"nat_port_counter"`
	NatReverseMap        *ebpf.Map `ebpf:"nat_reverse_map"`
	ObfuscationConfigMap *ebpf.Map `ebpf:"obfuscation_config_map"`
	StatsMap             *ebpf.Map `ebpf:"stats_map"`
}

func (m *WgForwardProxyMaps) Close() error {
	return _WgForwardProxyClose(
		m.ConnectionMap,
		m.MetricsMap,
		m.NatPortCounter,
		m.NatReverseMap,
		m.ObfuscationConfigMap,
		m.StatsMap,
	)
}

// WgForwardProxyVariables contains all global variables after they have been loaded into the kernel.
//
// It can be passed to LoadWgForwardProxyObjects or ebpf.CollectionSpec.LoadAndAssign.
type WgForwardProxyVariables struct {
}

// WgForwardProxyPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadWgForwardProxyObjects or ebpf.CollectionSpec.LoadAndAssign.
type WgForwardProxyPrograms struct {
	WgForwardProxy *ebpf.Program `ebpf:"wg_forward_proxy"`
}

func (p *WgForwardProxyPrograms) Close() error {
	return _WgForwardProxyClose(
		p.WgForwardProxy,
	)
}

func _WgForwardProxyClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed wgforwardproxy_bpfeb.o
var _WgForwardProxyBytes []byte
